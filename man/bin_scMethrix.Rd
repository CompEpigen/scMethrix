% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scMethrix_transforms.R
\name{bin_scMethrix}
\alias{bin_scMethrix}
\title{Bins the ranges of an \code{\link{scMethrix}} object.}
\usage{
bin_scMethrix(
  scm,
  regions = NULL,
  bin_size = 1e+05,
  bin_by = "bp",
  trans = NULL,
  overlap_type = "within",
  h5_dir = NULL,
  verbose = TRUE
)
}
\arguments{
\item{scm}{\code{\link{scMethrix}}; the single cell methylation experiment}

\item{regions}{The regions from which to make the bins}

\item{bin_size}{integer; The size of each bin. First bin will begin at the start position of the first genomic
region on the chromosome. If NULL, there will be one bin per region. Default 100000.}

\item{bin_by}{character; can create bins by # of base pairs "bp" or by # of CpG sites "cpg". Default "bp"}

\item{trans}{named vector of closures; The transforms for each assay in a named vector. Default NULL, meaning that
operations for "counts" assay is sum(x, na.rm=TRUE), and for all other assays is mean(x, na.rm=TRUE)}

\item{overlap_type}{character; defines the type of the overlap of the CpG sites with the target region.
Default value is \code{within}. For detailed description, see the \code{findOverlaps} function of the
\code{\link{IRanges}} package.}

\item{h5_dir}{directory to store an H5 based object}

\item{verbose}{boolean; Flag for outputting function status messages. Default = TRUE}
}
\value{
An \code{\link{scMethrix}} object
}
\description{
Bins the ranges of an \code{\link{scMethrix}} object.
}
\details{
Uses the inputted function to transform an assay in the \code{\link{scMethrix}} object. Typically, most assays will use either mean (for measurements) or sum (for counts). The transform is applied column-wise to optimize how HDF5 files access sample data. If HDF5 objects are used, transform functions should be  from \pkg{DelayedMatrixStats}.

In the output object, the number of CpGs in each region is saved in mcol(scm)$n_cpgs.
}
\examples{
data('scMethrix_data')
regions <- GRanges(seqnames = c("chr1"), ranges = IRanges(1,200000000)) 
regions <- unlist(tile(regions,10))
bin_scMethrix(scMethrix_data, regions = regions)
}
