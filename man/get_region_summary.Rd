% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scmethrix_operations.R
\name{get_region_summary}
\alias{get_region_summary}
\title{Extract and summarize methylation or coverage info by regions of interest}
\usage{
get_region_summary(
  m,
  regions = NULL,
  n_chunks = 1,
  n_threads = 1,
  type = "M",
  how = "mean",
  overlap_type = "within",
  verbose = TRUE,
  group = NULL
)
}
\arguments{
\item{m}{\code{\link{scMethrix}} object}

\item{regions}{genomic regions to be summarized. Could be a data.table with 3 columns (chr, start, end) or a \code{\link{GenomicRanges}} object}

\item{n_chunks}{Number of chunks to split the \code{\link{scMethrix}} object in case it is very large. Default = 1.
#param n_cores Number of parallel instances. \code{n_cores} should be less than or equal to \code{n_chunks}. If \code{n_chunks} is not specified, then \code{n_chunks} is initialized to be equal to \code{n_cores}. Default = 1.}

\item{type}{matrix which needs to be summarized. Could be \code{M}, \code{C}. Default 'M'}

\item{how}{mathematical function by which regions should be summarized. Can be one of the following: mean, sum, max, min. Default 'mean'}

\item{overlap_type}{defines the type of the overlap of the CpG sites with the target region. Default value is \code{within}. For detailed description,
see the \code{findOverlaps} function of the \code{\link{IRanges}} package.
#param elementMetadata.col columns in \code{\link{scMethrix}}@elementMetadata which needs to be summarised. Default = NULL.}

\item{verbose}{Boolean to output progress messages. Default TRUE}

\item{group}{a column name from sample annotation that defines groups. In this case, the number of min_samples will be
tested group-wise.}
}
\value{
table of summary statistic for the given region
}
\description{
Extract and summarize methylation or coverage info by regions of interest
}
\details{
Takes \code{\link{scMethrix}} object and summarizes regions
}
\examples{
data('scMethrix_data')
get_region_summary(m = scMethrix_data$mem,
regions = data.table(chr = c('chr1','chr2'), start = c(1,5), end =  c(5,10)),
type = 'M', how = 'mean')
}
